<?xml version='1.0' encoding='UTF-8'?>
<project>
  <actions/>
  <description>Installs libs on notebook server.</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>Service_base_name</name>
          <description>unique infrastructure value that previously was used when ssn being provisioned</description>
          <defaultValue>SBN</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Notebook_Name</name>
          <description>name of the notebook to start</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Username</name>
          <description>name of the data scientist user</description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>SSH_Key_Name</name>
          <description>name of the uploaded ssh key file (without ".pem")</description>
          <defaultValue>AKEY</defaultValue>
        </hudson.model.StringParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>os_user</name>
          <description>value of the ssh user</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>ubuntu</string>
              <string>ec2-user</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>os_family</name>
          <description>name of the linux distributive</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>debian</string>
              <string>redhat</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>notebook_app</name>
          <description>notebook application to be deployed</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>jupyter</string>
              <string>rstudio</string>
              <string>zeppelin</string>
              <string>tensor</string>
              <string>deeplearning</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Region</name>
          <description>aws region where infrastructure was deployed</description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>us-west-2</string>
              <string>us-west-1</string>
              <string>us-east-2</string>
              <string>us-east-1</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.ChoiceParameterDefinition>
          <name>Action</name>
          <description></description>
          <choices class="java.util.Arrays$ArrayList">
            <a class="string-array">
              <string>install_libs</string>
            </a>
          </choices>
        </hudson.model.ChoiceParameterDefinition>
        <hudson.model.StringParameterDefinition>
          <name>Libs</name>
          <description>
            List of additional libs in json format. For example:
            {
              'libraries': {
                'os_pkg': ['nmap', 'htop'],
                'pip2': ['requests', 'configparser'],
                'pip3': ['configparser'],
                'r_pkg': ['rmarkdown']
              }
            }
            Note: Use only single quotes and write all in one line!
            Types: for OS - os_pkg, for Python - pip2/pip3, for R - r_pkg
          </description>
          <defaultValue></defaultValue>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <scm class="hudson.scm.NullSCM"/>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers/>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>rand=`openssl rand -hex 10`; sed &apos;s/RID/&apos;${rand}&apos;/g&apos; /var/lib/jenkins/jobs/install_additional_libs/template.json | sed &apos;s/GOS/&apos;${os_user}&apos;/g&apos; | sed &apos;s/COF/&apos;${os_family}&apos;/g&apos; | sed &apos;s/ovs/&apos;${Service_base_name}&apos;/g&apos; | sed &apos;s/NUN/&apos;${Username}&apos;/g&apos; | sed &apos;s/CREG/&apos;${Region}&apos;/g&apos; | sed &apos;s/NIN/&apos;${Notebook_Name}&apos;/g&apos; | sed &apos;s/CKN/&apos;${SSH_Key_Name}&apos;/g&apos; | sed &quot;s/ADL/${Libs}/g&quot; | sed &apos;s/APP/&apos;${notebook_app}&apos;/g&apos; | sudo docker run -i -v /home/${os_user}/keys:/root/keys -v /opt/dlab/tmp/result:/response -v /var/opt/dlab/log/notebook:/logs/notebook docker.dlab-${notebook_app} --action $Action
      </command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>
